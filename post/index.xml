<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on lPinchol Moon&#39;s Blog</title>
    <link>http://lpinchol.github.io/post/</link>
    <description>Recent content in Posts on lPinchol Moon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Apr 2016 17:06:32 +0200</lastBuildDate>
    <atom:link href="http://lpinchol.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>C#: UTILIZAR MEGA API CLIENT</title>
      <link>http://lpinchol.github.io/post/Mega-api-client-c/</link>
      <pubDate>Mon, 11 Apr 2016 17:06:32 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Mega-api-client-c/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/mega_icono1.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mega es el sucesor del servicio de archivos en la nube Megaupload, para aquellos a los que no les suena ninguno de los dos es como un dropbox, un servicio gratuito o de pago dependiendo del espacio que utilizamos para poder subir nuestros archivos. En mi opinión es un servicio increíble que nos permite almacenar copias de seguridad de archivos en la nube y/o compartirlos.&lt;/p&gt;

&lt;p&gt;En esta entrada mostraré como desde un proyecto en .Net en este caso con C# podéis subir archivos a mega. Además de subir archivos también podréis eliminar, modificar, mover y varias funciones más. Para comenzar tendréis que incorporar a vuestro proyecto varias referencias, si lo realizáis desde el administrador de paquetes nuget de Visual Studio ahorraréis tiempo y faena. Para abrir el administrador de paquetes nuget vamos a la barra principal de arriba y seleccionamos proyecto y administrar paquetes nuget. En la caja de búsqueda ponéis “mega.co.nz” sin comillas, y debe aparecer una librería que hará de cliente contra los servidores de mega, la seleccionáis y le dais a instalar. Además instalará automáticamente otra llamada Newtonsoft.Json que utilizará la librería mega para realizar algunas acciones.&lt;/p&gt;

&lt;p&gt;Tenemos el proyecto listo para empezar a utilizar los métodos y funciones que nos facilita mega en la clase que queramos, con ello vamos a la clase desde la que queramos que se suba el archivo y añadimos dos directivas using, la primera hace referencia a la api mega y la segunda nos permitirá crear un hilo y de este modo no bloquear nuestra aplicación mientras se realizan algunas tareas en línea:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;using CG.Web.MegaApiClient;
using System.Threading.Tasks;

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Ahora vamos con el método que se encargará de realizar la subida del archivo, actualizar la progressbar, y actualizar el texto de un label que irá informando al usuario de como va el proceso. El método es llamado dentro del evento “Shown” del form, y el form lo llamo mediante “ShowDialog()” desde el evento click de un botón de otro form, de esta manera es como una ventana emergente que no desaparecerá hasta que termine el proceso (entre 10 y 40 segundos). Para que quede mas claro, tenemos el “Form1” con un botón, este botón llamará al “Form2” mediante “ShowDialog()”, y dentro del evento “Shown” del “Form2” realizaremos la llamada al método encargado de subir el archivo “subirArchivoAMega()”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;//Declaración de un hilo
 private Thread t;
 

 //Evento Shown que instancia y ejecuta el hilo (este evento se ejecuta después del Load).
 private void Form2_Shown(object sender, EventArgs e)
 {
     //Instancia un hilo para ejecutar el método &amp;quot;subirArchivoAMega&amp;quot;.
     t = new Thread(subirArchivoAMega);
     t.Start();
 }
// Método que se encarga de subir el archivo a la nuve con la api &amp;quot;Mega&amp;quot;.
private void subirArchivoAMega() {
    try {
          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Conectando como &#39;tu_cuenta_de_email@gmail.com&#39;&amp;quot;; }));
          // Aumentar la barra de progreso.
          progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
          // Instancia de un cliente para conectar con mega.
          MegaApiClient cliente = new MegaApiClient();
          // Inicio de sesión con el cliente, pasando el correo y la contraseña de la cuenta mega a la que se sube el archivo.
          cliente.Login(&amp;quot;tu_cuenta_de_email@gmail.com&amp;quot;, &amp;quot;****************&amp;quot;);

          // Aumentar la barra de progreso.
          progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Obteniendo directorios...&amp;quot;; }));
          // Obtenemos los nodos (directorios/archivos) de la cuenta dentro de una variable.
          var nodos = cliente.GetNodes();

          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Buscando carpeta &#39;Facturas&#39;...&amp;quot;; }));
          // Comprobar si existe algún nodo (directorio) que se llame &amp;quot;Facturas&amp;quot; (en mi caso quiero subir el archivo a dicha carpeta).
          bool existe = cliente.GetNodes().Any(n =&amp;gt; n.Name == &amp;quot;Facturas&amp;quot;);

          // Crear dos nodos.
          Node root;
          Node carpeta;

         // Si el directorio facturas existe, se obtiene. Si no existe, se crea.
         if (existe == true) {
              // Actualizar el label para informar al usuario.
              lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Obteniendo la carpeta &#39;Facturas&#39;....&amp;quot;; }));
              // Aumentar la barra de progreso.
              progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

             // Obtenemos el directorio.
             carpeta = nodos.Single(n =&amp;gt; n.Name == &amp;quot;Facturas&amp;quot;);
         }else {
             // Actualizar label para informar al usuario.
             lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Creando carpeta &#39;Facturas&#39;...&amp;quot;; }));
             // Aumentar la barra de progreso.
             progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

             //Obtenemos el nodo raíz.
             root = nodos.Single(n =&amp;gt; n.Type == NodeType.Root);
             // Creamos el directorio llamado &amp;quot;Facturas&amp;quot; en la raíz.
             carpeta = cliente.CreateFolder(&amp;quot;Facturas&amp;quot;, root);
         }

         // Aumentar la barra de progreso.
         progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
         // Actualizar label para informar al usuario.
         lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Subiendo archivo...&amp;quot;; }));
         // Aumentar la barra de progreso.
         progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

         // Subimos el archivo al directorio &amp;quot;Facturas&amp;quot;, pasando la ruta del archivo a subir y el directorio de mega donde debe subirlo.
         Node archivo = cliente.Upload(@&amp;quot;C\:Mis facturas\factura1.pdf&amp;quot;, carpeta);

         // Obtener el link de descarga del archivo subido por si se requiere para algo.
         Uri downloadUrl = cliente.GetDownloadLink(archivo);
         // Actualizar label para informar al usuario.
         lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Archivo subido con éxito.&amp;quot;; }));

    }catch (Exception error){
        // Algo ha fallado, abortamos el subproceso.
        t.Abort();
        // Mensaje en pantalla para informar al usuario del error.
        MessageBox.Show(&amp;quot;Error al intentar subir el archivo. &amp;quot; + error.Message, &amp;quot;Error&amp;quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);
    }

    // No se puede cerrar el form desde un subproceso ya que no es desde donde se ha creado. Con este código podemos cerrarlo.
    this.Invoke((MethodInvoker)delegate{
        this.Close();
    });
}

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Si os fijáis, hago constantemente referencias a elementos del form, el motivo es para que el usuario sepa en todo momento la evolución del proceso. Para acceder a los componentes de un form no podemos hacerlo directamente desde un subproceso, por eso utilizamos el método “Invoke” que ejecuta el delegado asignado al subproceso y nos permite comunicarnos con el usuario.&lt;/p&gt;

&lt;p&gt;Finalmente muestro mi diseño del form para que veáis el total de elementos a los que hago referencia en el método, aunque podéis implementar el diseño que os guste.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/megaapiclient_upload_file.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VB.NET Variables entre formularios</title>
      <link>http://lpinchol.github.io/post/VBNET-Variables-entre-formularios/</link>
      <pubDate>Mon, 11 Apr 2016 16:55:01 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/VBNET-Variables-entre-formularios/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/vb_net.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Como en cualquier lenguaje vb.net tiene sus constructores para poder pasar variables entre formularios. Aquí dejo un pequeño ejemplo de como puede crearse un constructor:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;Public Class Form2
.
.
.
    Private texto As String
    Private numero As Integer


    &#39; Constructor Form2
    Public Sub New (ByVal miTexto As String, ByVal miNumero As Integer)

        Me.texto = miTexto
        Me.numero = miNumero

    End Sub
.
.
.

End Class
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Y la llamada pasadole los parámetros se realiza de esta manera:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;&#39; Instancia
Dim miForm2 As New Form2(&amp;quot;Este es el texto que paso&amp;quot;, 2)

&#39; Mostramos el form2
miForm2.Show()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Protecto Codigos [0.0.1a]</title>
      <link>http://lpinchol.github.io/post/Protecto-Codigos-0-0-1/</link>
      <pubDate>Mon, 11 Apr 2016 14:18:40 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Protecto-Codigos-0-0-1/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.1a con la siguiente solucion:
&amp;gt; [x] Template card bg 1&lt;/p&gt;

&lt;p&gt;Ya he empezado con el proyecto codigos y aqui dejo los iconos de las barajas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hexa [C#]&lt;/li&gt;
&lt;li&gt;Fuerza [XCODE]&lt;/li&gt;
&lt;li&gt;Rag [C++]&lt;/li&gt;
&lt;li&gt;Conect [Markdown]&lt;/li&gt;
&lt;li&gt;Kan [HTML]&lt;/li&gt;
&lt;li&gt;Picas [JS]&lt;/li&gt;
&lt;li&gt;Corazones [GO]&lt;/li&gt;
&lt;li&gt;Treboles [PHP]&lt;/li&gt;
&lt;li&gt;Rombo [css]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguidamente las imagenes de los iconos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/HexaIcon.png&#34; alt=&#34;Hexa&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/FuerzaIcon.png&#34; alt=&#34;Fuerza&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/RagIcon.png&#34; alt=&#34;Rag&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/ConectIcon.png&#34; alt=&#34;Conect&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/KanIcon.png&#34; alt=&#34;Kan&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/PicasIcon.png&#34; alt=&#34;Picas&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/CorazonesIcon.png&#34; alt=&#34;Corazones&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/TrebolesIcon.png&#34; alt=&#34;Treboles&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/RomboIcon.png&#34; alt=&#34;Rombo&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Valkirye anatomia the origin anuncio</title>
      <link>http://lpinchol.github.io/post/Valkirye-anatomia-the-origin-anuncio/</link>
      <pubDate>Mon, 11 Apr 2016 14:14:49 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Valkirye-anatomia-the-origin-anuncio/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/vatoa.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;square-enix-anuncia-valkyrie-anatomia-the-origin:4740129c16adaa38e630a3f5c1766cd5&#34;&gt;Square Enix anuncia ‘Valkyrie Anatomia: The Origin’&lt;/h1&gt;

&lt;p&gt;Square Enix ha anunciado Valkyrie Anatomia: The Origin, un nuevo RPG cuya distribución está planeada para primavera de este mismo año en Japón.&lt;/p&gt;

&lt;p&gt;En la web se puede leer un logo en el que aparece la protagonista de la serie Valkyrie Profile. El juego cuenta con Yoshinori Yamagishi como productor, música de Moto Sakuraba y guión de Daisuke “Bun-O FUJISAWA” Fujisawa.&lt;/p&gt;

&lt;p&gt;De momento no se ha anunciado plataforma, pero dado que su fecha de lanzamiento es inminente y que se habla de “distribución”, lo más probable es que sea un título para móviles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -11-04-2016-</title>
      <link>http://lpinchol.github.io/post/Pintura-Del-Dia-11-04-2016/</link>
      <pubDate>Mon, 11 Apr 2016 14:05:40 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Pintura-Del-Dia-11-04-2016/</guid>
      <description>

&lt;h1 id=&#34;center-imagen-del-dia-11-04-2016-center-br:3d3cf331ef63d951fe9363a7775e9755&#34;&gt;&lt;center&gt;Imagen del dia [11.04.2016]&lt;/center&gt;&lt;/br&gt;&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/04.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;Una guerrera diseñada por &lt;strong&gt;Saitam&lt;/strong&gt;&lt;/center&gt;&lt;/br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Final Fantasy XIV Online BAFTA 2016</title>
      <link>http://lpinchol.github.io/post/Final-Fantasy-XIV-Online-BAFTA-2016/</link>
      <pubDate>Mon, 11 Apr 2016 03:08:32 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Final-Fantasy-XIV-Online-BAFTA-2016/</guid>
      <description>

&lt;h1 id=&#34;final-fantasy-xiv-online-es-nominada-a-los-bafta-2016:55fac8618382ab8dc873d5f6b615e3a5&#34;&gt;Final Fantasy XIV Online es nominada a los BAFTA 2016.&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/ffxivoawards.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Al final los finalistas ha sido &lt;strong&gt;Prison Architect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pero Square enix da las gracias en sus redes sociales.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seguidamente dejo las posiciones:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prison Architect&lt;/p&gt;

&lt;p&gt;Destiny: The Taken King&lt;/p&gt;

&lt;p&gt;Final Fantasy XIV Online&lt;/p&gt;

&lt;p&gt;Guitar Hero: Live&lt;/p&gt;

&lt;p&gt;The Witcher 3: Wild Hunt&lt;/p&gt;

&lt;p&gt;LEGO Dimensions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://awards.bafta.org/award/2016/games/persistent-game&#34; title=&#34;Nominados&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dragon Quest Heroes II</title>
      <link>http://lpinchol.github.io/post/Dragon-Quest-Heroes-II/</link>
      <pubDate>Sun, 10 Apr 2016 21:18:24 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Dragon-Quest-Heroes-II/</guid>
      <description>

&lt;h1 id=&#34;nuevos-vídeos-de-juego-de-dragon-quest-heroes-ii:46d9bb7ef2ca5af432a65c96c29b76d3&#34;&gt;Nuevos vídeos de juego de Dragon Quest Heroes II&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/dqiipreview.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Square Enix celebraba este fin de semana un evento en Tokio que permitía a los visitantes probar de primera mano el
nuevo Dragon Quest Heroes II: Futago no Ou to Yogen no Owari (Dragon Quest Heroes II: Twin Kings and the Prophecy’s
End). Desde allí nos llegan varios vídeos, incluyendo varios de la PSVita, las transformaciones disponibles con las
Monster Coins, e incluso del multijugador contra el WingTiger.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;Dragon Quest Heroes II se lanzará el 27 de mayo en las PlayStation 3, PlayStation 4 y PSVita japonesas.&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Video: &lt;a href=&#34;https://youtu.be/7JU4KjIGQ10&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -10-04-2016-</title>
      <link>http://lpinchol.github.io/post/Pintura-Del-Dia-10-04-2016/</link>
      <pubDate>Sun, 10 Apr 2016 20:40:25 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Pintura-Del-Dia-10-04-2016/</guid>
      <description>

&lt;h1 id=&#34;center-imagen-del-dia-10-04-2016-center-br:67c4c327fbe915e422faea58138cf6a9&#34;&gt;&lt;center&gt;Imagen del dia [10.04.2016]&lt;/center&gt;&lt;/br&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/03.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;Cuando no hay espacio, se saca de cualquier lado.&lt;/center&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;Siempre e pensado que cuando no se puede, siempre hay una solucion que sacar.&lt;em&gt;SOLO ES QUERER&lt;/em&gt;.&lt;/center&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -09-04-2016-</title>
      <link>http://lpinchol.github.io/post/Pintura-Del-Dia-09-04-2016/</link>
      <pubDate>Sat, 09 Apr 2016 17:27:22 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Pintura-Del-Dia-09-04-2016/</guid>
      <description>

&lt;h1 id=&#34;center-imagen-del-dia-09-04-2016-center:ccd55b739ce1ccc11f6c55973f2b736d&#34;&gt;&lt;center&gt;Imagen del dia [09.04.2016]&lt;/center&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/02.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;La imagen del dia, una &lt;strong&gt;exorcista&lt;/strong&gt;.&lt;/center&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -08-04-2016-</title>
      <link>http://lpinchol.github.io/post/Pintura-Del-Dia-08-04-2016/</link>
      <pubDate>Fri, 08 Apr 2016 13:39:11 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Pintura-Del-Dia-08-04-2016/</guid>
      <description>

&lt;h1 id=&#34;center-imagen-del-dia-08-04-2016-center:13e6d9c376a752bec4de2267dd283c95&#34;&gt;&lt;center&gt;Imagen del dia [08.04.2016]&lt;/center&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;Bueno aqui la imagen del dia, un art de una samurai.&lt;/center&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Iniciando el Blog</title>
      <link>http://lpinchol.github.io/post/firstpost/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://lpinchol.github.io/post/firstpost/</guid>
      <description>&lt;p&gt;#Iniciando el blog&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Bueno ya empezamos con el blog, realmente necesitaba un sitio donde tenerlo todo guardado para futuras y que mejor que un blog.&lt;/p&gt;

&lt;p&gt;Nos vemos pronto.&lt;/p&gt;

&lt;p&gt;- lPinchol, Moon&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>