<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lpinchol on lPinchol Moon&#39;s Blog</title>
    <link>http://lpinchol.github.io/tags/lpinchol/</link>
    <description>Recent content in Lpinchol on lPinchol Moon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Apr 2016 18:24:33 +0200</lastBuildDate>
    <atom:link href="http://lpinchol.github.io/tags/lpinchol/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tales of Berseria presentacion</title>
      <link>http://lpinchol.github.io/post/Tales-of-Berseria-presentacion/</link>
      <pubDate>Sun, 24 Apr 2016 18:24:33 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Tales-of-Berseria-presentacion/</guid>
      <description>

&lt;h1 id=&#34;center-vídeo-de-tales-of-berseria-desde-una-de-las-presentaciones-europeas-center-br:9e413549ea62944201bc0802fc2a9a79&#34;&gt;&lt;center&gt;Vídeo de Tales of Berseria desde una de las presentaciones europeas.&lt;/center&gt;&lt;/br&gt;&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/Tales-Of-Berseria.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;Game eXperience ha colgado un vídeo de cinco minutos de juego grabado cámara en mano de Tales of Berseria desde una presentación realizada por Bandai Namco en Europa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tales of Berseria se lanzará el 18 de agosto en las PlayStation 3 y PlayStation 4 japonesas el 18 de agosto, mientras que a occidente llegará para PlayStation 4 y PC a inicios de 2017.&lt;/center&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/agygkG0NCrc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.6a]</title>
      <link>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.6/</link>
      <pubDate>Wed, 20 Apr 2016 01:05:13 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.6/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.6a con la siguiente solucion:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[x] [0.0.6-0]Animation logo&lt;/p&gt;

&lt;p&gt;[x] [0.0.6-1]Load source sound&lt;/p&gt;

&lt;p&gt;[x] [0.0.6-2]Click screen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Samurai Rising New RPG</title>
      <link>http://lpinchol.github.io/post/samurai-rising-new/</link>
      <pubDate>Tue, 19 Apr 2016 14:28:43 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/samurai-rising-new/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/Samurai-Rising.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;samurai-rising-nuevo-rpg-de-square-enix-para-móviles:22d436f89cc196c6b72eddde4c904fd7&#34;&gt;‘Samurai Rising’, nuevo RPG de Square Enix para móviles&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Square Enix ha revelado que el Project: RISING para smartphones anunciado la pasada semana será Samurai Rising, un “RPG de acción extrema” que se lanzará en Japón esta misma primavera.&lt;/p&gt;

&lt;p&gt;El registro previo ya está abierto en la web oficial del título.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/UjXs3OYcjQ4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.5a]</title>
      <link>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.5/</link>
      <pubDate>Tue, 19 Apr 2016 14:26:22 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.5/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.5a con la siguiente solucion:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[x] Basic Funcionality&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Btooms 19 Mayo</title>
      <link>http://lpinchol.github.io/post/Btooms19/</link>
      <pubDate>Tue, 19 Apr 2016 14:20:05 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Btooms19/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/anime/btoom.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El cintillo del tercer tomo recopilatorio del manga La Vie en Doll de Junya Inoue anuncia que el tomo número 20 de otro manga del autor, Btooom!, incluirá un “importante anuncio” cuando Shinchosha lo ponga a la venta el próximo 9 de mayo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;La historia está protagonizada por Ryuuta Sakamoto, un NEET enganchado a los videojuegos y que es el primero en el ranking mundial de Btoom!, un juego online de combate mediante el uso de bombas de todo tipo. Un día se despierta y está en una isla tropical a la que no sabe cómo ha llegado. Paseando por el lugar descubre a alguien a lo lejos que le pide ayuda, y cuando se acerca a él, la otra persona le lanza algo. Ryuta no tarda en darse cuenta que es una bomba, que va a morir como reaccione y que esas bombas son las de Btoom!.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inoue lanzaba el manga en la Weekly Comic Bunch de Shinchosha en 2009, pasando en 2011 a la Monthly Comic Bunch. El tomo número 19 se puso a la venta el 9 de enero.&lt;/p&gt;

&lt;p&gt;La obra tuvo una adaptación televisiva animada de 12 episodios en 2012.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Nier Automata</title>
      <link>http://lpinchol.github.io/post/Nier-Automata/</link>
      <pubDate>Mon, 18 Apr 2016 15:20:54 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Nier-Automata/</guid>
      <description>

&lt;h1 id=&#34;nuevos-vídeos-de-juego-y-personajes-de-nier-automata:b3deabea0475d2c3bc74706a16392fbf&#34;&gt;Nuevos vídeos de juego y personajes de NieR: Automata&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Hoy se ha celebrado un evento dedicado a NieR: Automata desde el que nos dejan detalles de nuevos personajes y nuevos vídeos varios.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/Nier1.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El primero de ellos es YoRHa No.9 Type S, o 9S, que es tan amable y sincero como infantil, siendo especialista en conseguir información gracias a sus capacidades como hacker. Su voz es la de  Yui Ishikawa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/Nier2.jpg&#34; alt=&#34;002&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;YoRHa Type NO. 2, o A2, es un personaje de corte más agresivo y cuya especialidad es la lucha cuerpo a cuerpo. Taciturna y solitaria, es el androide más veterano de todos, puesto que se puso en marcha antes de que los modelos 2B y 9S estuvieran funcionando. Su voz es la de Ayaka Suwa.&lt;/p&gt;

&lt;p&gt;A ambos personajes podemos verlos en el siguiente vídeo junto a 2B, a quien ya presentaron anteriormente:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/KloExTCcgs4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;También se ha interpretado en directo el tema principal del juego, de J’Nique Nicole:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/0Qd5juSzByU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Y mostrados nuevos vídeos de juego en general en los que podemos ver la acción.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/2Xq_rlP54pI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;853&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/mC3i0aHtzTU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.4a]</title>
      <link>http://lpinchol.github.io/post/Proyecto-Cogidos-0.0.4/</link>
      <pubDate>Fri, 15 Apr 2016 14:47:53 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Proyecto-Cogidos-0.0.4/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.4a con la siguiente solucion:&lt;/p&gt;

&lt;p&gt;Build and integrated GUI for text res and borders.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[x] Build&lt;/p&gt;

&lt;p&gt;[x] Integration&lt;/p&gt;

&lt;p&gt;[x] Test&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.3a]</title>
      <link>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.3/</link>
      <pubDate>Thu, 14 Apr 2016 03:29:54 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.3/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.3a con la siguiente solucion:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[x] Template Content 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Argyle Shift</title>
      <link>http://lpinchol.github.io/post/Argyle-Shift/</link>
      <pubDate>Mon, 11 Apr 2016 22:41:01 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Argyle-Shift/</guid>
      <description>

&lt;h1 id=&#34;argyle-shift-pilota-un-mecha-gracias-a-la-realidad-virtual-japonesa:87cabf5cf35e22060714326c7d8f1e45&#34;&gt;‘Argyle Shift’: Pilota un mecha gracias a la realidad virtual japonesa.&lt;/h1&gt;

&lt;p&gt;Los titanes Shinji Aramaki, Production I.G, Katsuhiro Harada y Takayuki Yanase forman parte del proyecto&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle1.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Katsuhiro Harada — Tekken — se encuentra trabajando en el guión y supervisando una demo llamada Argyle Shift, que se sirve de la realidad virtual de HTC Vive para ponernos en la piel de un piloto de un mecha capaz de disparar.&lt;/p&gt;

&lt;p&gt;Estamos ante un &lt;a href=&#34;http://www.inside-games.jp/article/2016/04/11/97718.html&#34; title=&#34;ambicioso proyecto&#34;&gt;ambicioso proyecto&lt;/a&gt;, pues del mismo forman parte Production I.G, que se encarga del diseño del mundo y paisajes, Shinji Aramaki — Appleseed —, quien dirige el proyecto y Takayuki Yanase — Ghost in the Shell Arise —, que se encarga del diseño de mechas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle2.jpg&#34; alt=&#34;002&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle7.jpg&#34; alt=&#34;007&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;En Argyle Shift pilotamos un mecha gigante llamado Lucifer. La copiloto será una inteligencia artificial humanoide llamada Aine cuyo aspecto es el de una chica de anime. Este personaje interactuará con el jugador de un modo similar a lo ya visto en Summer Lesson, de Bandai Namco.&lt;/p&gt;

&lt;p&gt;La simulación será uno de los seis juegos que estarán disponibles en el centro de experiencia VR Zone: Project I Can de Bandai Namco. Este centro abrirá sus puertas el 15 de abril en Tokio y permitirá a curiosos e interesados probar la realidad virtual y verter sus impresiones sobre la experiencia.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle3.jpg&#34; alt=&#34;003&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle4.jpg&#34; alt=&#34;004&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle5.jpg&#34; alt=&#34;005&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/argyle6.jpg&#34; alt=&#34;006&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.2a]</title>
      <link>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.2/</link>
      <pubDate>Mon, 11 Apr 2016 22:33:11 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Proyecto-Codigos-0.0.2/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.2a con la siguiente solucion:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[x] Template card bg 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/CorazonesBG2_01.png&#34; alt=&#34;log&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C#: UTILIZAR MEGA API CLIENT</title>
      <link>http://lpinchol.github.io/post/Mega-api-client-c/</link>
      <pubDate>Mon, 11 Apr 2016 17:06:32 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Mega-api-client-c/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/mega_icono1.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mega es el sucesor del servicio de archivos en la nube Megaupload, para aquellos a los que no les suena ninguno de los dos es como un dropbox, un servicio gratuito o de pago dependiendo del espacio que utilizamos para poder subir nuestros archivos. En mi opinión es un servicio increíble que nos permite almacenar copias de seguridad de archivos en la nube y/o compartirlos.&lt;/p&gt;

&lt;p&gt;En esta entrada mostraré como desde un proyecto en .Net en este caso con C# podéis subir archivos a mega. Además de subir archivos también podréis eliminar, modificar, mover y varias funciones más. Para comenzar tendréis que incorporar a vuestro proyecto varias referencias, si lo realizáis desde el administrador de paquetes nuget de Visual Studio ahorraréis tiempo y faena. Para abrir el administrador de paquetes nuget vamos a la barra principal de arriba y seleccionamos proyecto y administrar paquetes nuget. En la caja de búsqueda ponéis “mega.co.nz” sin comillas, y debe aparecer una librería que hará de cliente contra los servidores de mega, la seleccionáis y le dais a instalar. Además instalará automáticamente otra llamada Newtonsoft.Json que utilizará la librería mega para realizar algunas acciones.&lt;/p&gt;

&lt;p&gt;Tenemos el proyecto listo para empezar a utilizar los métodos y funciones que nos facilita mega en la clase que queramos, con ello vamos a la clase desde la que queramos que se suba el archivo y añadimos dos directivas using, la primera hace referencia a la api mega y la segunda nos permitirá crear un hilo y de este modo no bloquear nuestra aplicación mientras se realizan algunas tareas en línea:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;using CG.Web.MegaApiClient;
using System.Threading.Tasks;

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Ahora vamos con el método que se encargará de realizar la subida del archivo, actualizar la progressbar, y actualizar el texto de un label que irá informando al usuario de como va el proceso. El método es llamado dentro del evento “Shown” del form, y el form lo llamo mediante “ShowDialog()” desde el evento click de un botón de otro form, de esta manera es como una ventana emergente que no desaparecerá hasta que termine el proceso (entre 10 y 40 segundos). Para que quede mas claro, tenemos el “Form1” con un botón, este botón llamará al “Form2” mediante “ShowDialog()”, y dentro del evento “Shown” del “Form2” realizaremos la llamada al método encargado de subir el archivo “subirArchivoAMega()”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;//Declaración de un hilo
 private Thread t;
 

 //Evento Shown que instancia y ejecuta el hilo (este evento se ejecuta después del Load).
 private void Form2_Shown(object sender, EventArgs e)
 {
     //Instancia un hilo para ejecutar el método &amp;quot;subirArchivoAMega&amp;quot;.
     t = new Thread(subirArchivoAMega);
     t.Start();
 }
// Método que se encarga de subir el archivo a la nuve con la api &amp;quot;Mega&amp;quot;.
private void subirArchivoAMega() {
    try {
          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Conectando como &#39;tu_cuenta_de_email@gmail.com&#39;&amp;quot;; }));
          // Aumentar la barra de progreso.
          progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
          // Instancia de un cliente para conectar con mega.
          MegaApiClient cliente = new MegaApiClient();
          // Inicio de sesión con el cliente, pasando el correo y la contraseña de la cuenta mega a la que se sube el archivo.
          cliente.Login(&amp;quot;tu_cuenta_de_email@gmail.com&amp;quot;, &amp;quot;****************&amp;quot;);

          // Aumentar la barra de progreso.
          progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Obteniendo directorios...&amp;quot;; }));
          // Obtenemos los nodos (directorios/archivos) de la cuenta dentro de una variable.
          var nodos = cliente.GetNodes();

          // Actualizar el label para informar al usuario.
          lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Buscando carpeta &#39;Facturas&#39;...&amp;quot;; }));
          // Comprobar si existe algún nodo (directorio) que se llame &amp;quot;Facturas&amp;quot; (en mi caso quiero subir el archivo a dicha carpeta).
          bool existe = cliente.GetNodes().Any(n =&amp;gt; n.Name == &amp;quot;Facturas&amp;quot;);

          // Crear dos nodos.
          Node root;
          Node carpeta;

         // Si el directorio facturas existe, se obtiene. Si no existe, se crea.
         if (existe == true) {
              // Actualizar el label para informar al usuario.
              lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Obteniendo la carpeta &#39;Facturas&#39;....&amp;quot;; }));
              // Aumentar la barra de progreso.
              progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

             // Obtenemos el directorio.
             carpeta = nodos.Single(n =&amp;gt; n.Name == &amp;quot;Facturas&amp;quot;);
         }else {
             // Actualizar label para informar al usuario.
             lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Creando carpeta &#39;Facturas&#39;...&amp;quot;; }));
             // Aumentar la barra de progreso.
             progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

             //Obtenemos el nodo raíz.
             root = nodos.Single(n =&amp;gt; n.Type == NodeType.Root);
             // Creamos el directorio llamado &amp;quot;Facturas&amp;quot; en la raíz.
             carpeta = cliente.CreateFolder(&amp;quot;Facturas&amp;quot;, root);
         }

         // Aumentar la barra de progreso.
         progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));
         // Actualizar label para informar al usuario.
         lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Subiendo archivo...&amp;quot;; }));
         // Aumentar la barra de progreso.
         progressBar1.Invoke(new MethodInvoker(delegate { progressBar1.PerformStep(); }));

         // Subimos el archivo al directorio &amp;quot;Facturas&amp;quot;, pasando la ruta del archivo a subir y el directorio de mega donde debe subirlo.
         Node archivo = cliente.Upload(@&amp;quot;C\:Mis facturas\factura1.pdf&amp;quot;, carpeta);

         // Obtener el link de descarga del archivo subido por si se requiere para algo.
         Uri downloadUrl = cliente.GetDownloadLink(archivo);
         // Actualizar label para informar al usuario.
         lblInfo.Invoke(new MethodInvoker(delegate { lblInfo.Text = &amp;quot;Archivo subido con éxito.&amp;quot;; }));

    }catch (Exception error){
        // Algo ha fallado, abortamos el subproceso.
        t.Abort();
        // Mensaje en pantalla para informar al usuario del error.
        MessageBox.Show(&amp;quot;Error al intentar subir el archivo. &amp;quot; + error.Message, &amp;quot;Error&amp;quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);
    }

    // No se puede cerrar el form desde un subproceso ya que no es desde donde se ha creado. Con este código podemos cerrarlo.
    this.Invoke((MethodInvoker)delegate{
        this.Close();
    });
}

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Si os fijáis, hago constantemente referencias a elementos del form, el motivo es para que el usuario sepa en todo momento la evolución del proceso. Para acceder a los componentes de un form no podemos hacerlo directamente desde un subproceso, por eso utilizamos el método “Invoke” que ejecuta el delegado asignado al subproceso y nos permite comunicarnos con el usuario.&lt;/p&gt;

&lt;p&gt;Finalmente muestro mi diseño del form para que veáis el total de elementos a los que hago referencia en el método, aunque podéis implementar el diseño que os guste.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/megaapiclient_upload_file.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VB.NET Variables entre formularios</title>
      <link>http://lpinchol.github.io/post/VBNET-Variables-entre-formularios/</link>
      <pubDate>Mon, 11 Apr 2016 16:55:01 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/VBNET-Variables-entre-formularios/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/Dev/vb_net.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Como en cualquier lenguaje vb.net tiene sus constructores para poder pasar variables entre formularios. Aquí dejo un pequeño ejemplo de como puede crearse un constructor:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;Public Class Form2
.
.
.
    Private texto As String
    Private numero As Integer


    &#39; Constructor Form2
    Public Sub New (ByVal miTexto As String, ByVal miNumero As Integer)

        Me.texto = miTexto
        Me.numero = miNumero

    End Sub
.
.
.

End Class
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;Y la llamada pasadole los parámetros se realiza de esta manera:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&#34;language-C#&#34;&gt;&#39; Instancia
Dim miForm2 As New Form2(&amp;quot;Este es el texto que paso&amp;quot;, 2)

&#39; Mostramos el form2
miForm2.Show()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Proyecto Codigos [0.0.1a]</title>
      <link>http://lpinchol.github.io/post/Protecto-Codigos-0-0-1/</link>
      <pubDate>Mon, 11 Apr 2016 14:18:40 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Protecto-Codigos-0-0-1/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/Logo.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Completado la alpha 0.0.1a con la siguiente solucion:
&amp;gt; [x] Template card bg 1&lt;/p&gt;

&lt;p&gt;Ya he empezado con el proyecto codigos y aqui dejo los iconos de las barajas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hexa [C#]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fuerza [XCODE]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Rag [C++]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Conect [Markdown]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kan [HTML]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Picas [JS]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Corazones [GO]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Treboles [PHP]&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Rombo [css]&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguidamente las imagenes de los iconos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/HexaIcon.png&#34; alt=&#34;Hexa&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/FuerzaIcon.png&#34; alt=&#34;Fuerza&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/RagIcon.png&#34; alt=&#34;Rag&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/ConectIcon.png&#34; alt=&#34;Conect&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/KanIcon.png&#34; alt=&#34;Kan&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/PicasIcon.png&#34; alt=&#34;Picas&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/CorazonesIcon.png&#34; alt=&#34;Corazones&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/TrebolesIcon.png&#34; alt=&#34;Treboles&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/proyectocodigo/RomboIcon.png&#34; alt=&#34;Rombo&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Valkirye anatomia the origin anuncio</title>
      <link>http://lpinchol.github.io/post/Valkirye-anatomia-the-origin-anuncio/</link>
      <pubDate>Mon, 11 Apr 2016 14:14:49 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Valkirye-anatomia-the-origin-anuncio/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/vatoa.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;square-enix-anuncia-valkyrie-anatomia-the-origin:4740129c16adaa38e630a3f5c1766cd5&#34;&gt;Square Enix anuncia ‘Valkyrie Anatomia: The Origin’&lt;/h1&gt;

&lt;p&gt;Square Enix ha anunciado Valkyrie Anatomia: The Origin, un nuevo RPG cuya distribución está planeada para primavera de este mismo año en Japón.&lt;/p&gt;

&lt;p&gt;En la web se puede leer un logo en el que aparece la protagonista de la serie Valkyrie Profile. El juego cuenta con Yoshinori Yamagishi como productor, música de Moto Sakuraba y guión de Daisuke “Bun-O FUJISAWA” Fujisawa.&lt;/p&gt;

&lt;p&gt;De momento no se ha anunciado plataforma, pero dado que su fecha de lanzamiento es inminente y que se habla de “distribución”, lo más probable es que sea un título para móviles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Final Fantasy XIV Online BAFTA 2016</title>
      <link>http://lpinchol.github.io/post/Final-Fantasy-XIV-Online-BAFTA-2016/</link>
      <pubDate>Mon, 11 Apr 2016 03:08:32 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/Final-Fantasy-XIV-Online-BAFTA-2016/</guid>
      <description>

&lt;h1 id=&#34;final-fantasy-xiv-online-es-nominada-a-los-bafta-2016:55fac8618382ab8dc873d5f6b615e3a5&#34;&gt;Final Fantasy XIV Online es nominada a los BAFTA 2016.&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/ffxivoawards.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Al final los finalistas ha sido &lt;strong&gt;Prison Architect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pero Square enix da las gracias en sus redes sociales.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seguidamente dejo las posiciones:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Prison Architect&lt;/p&gt;

&lt;p&gt;Destiny: The Taken King&lt;/p&gt;

&lt;p&gt;Final Fantasy XIV Online&lt;/p&gt;

&lt;p&gt;Guitar Hero: Live&lt;/p&gt;

&lt;p&gt;The Witcher 3: Wild Hunt&lt;/p&gt;

&lt;p&gt;LEGO Dimensions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://awards.bafta.org/award/2016/games/persistent-game&#34; title=&#34;Nominados&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>