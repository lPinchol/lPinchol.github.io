<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lPinchol Moon&#39;s Blog</title>
    <link>http://lpinchol.github.io/tags/lpinchol/index.xml</link>
    <description>Recent content on lPinchol Moon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <copyright>© lPinchol Moon.&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <atom:link href="http://lpinchol.github.io/tags/lpinchol/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Intentando Riggear en 3DMax</title>
      <link>http://lpinchol.github.io/post/intentando-rigear-3dmax/</link>
      <pubDate>Wed, 18 Jan 2017 20:23:03 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/intentando-rigear-3dmax/</guid>
      <description>

&lt;h1 id=&#34;riggear-para-salvarte-el-culo&#34;&gt;Riggear para salvarte el culo&lt;/h1&gt;

&lt;p&gt;Bueno y aqui estamos, intentando riggear en 3d max para la asignatura de 3º de Setup, la verdad que todas las asignaturas de riggeo y animacion, no son lo mio, a parte de que no me gustan &amp;hellip; son pesadas y muy repetitivas.&lt;/p&gt;

&lt;p&gt;Le pedi al profesor David Amado un modelo de un juego suyo para hacer la practica, ya que despues de 3 modelos, ninguno le convencio.&lt;/p&gt;

&lt;p&gt;O la malla era muy densa, o no tenia que llevar falda&amp;hellip; nose, cosas raras, la verdad que si encima de que intento ponerme un reto, van y no me dejan &amp;hellip; la asignatura se vuelve menos .. como decirlo, interesante.&lt;/p&gt;

&lt;p&gt;Por lo que en este caso, decidi que me prestara un modelo (a mi parecer de la generacion antigua) y asi me quitaba los calentamientos de cabeza.&lt;/p&gt;

&lt;p&gt;Asi empezo la cosa, por los pies.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/clases/Pierna1.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Una simple pierna, rigeada.&lt;/p&gt;

&lt;p&gt;Sobre todo, lo mas importante, es que todo este bien organizado, ya que se te acumulara tal numero de nodos que al terminar sera un lio si no organizas bien tu rigging.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/clases/Pierna4.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Yo , a parte de crear la memoria (necesaria para todas las asignaturas, tambien en una libretica que siempre llevo con migo) me voy escribiendo una guia, aunque no me guste riggear, nunca sabes lo que puedes necesitar el dia de mañana, asique no esta de mal. ^^&lt;/p&gt;

&lt;p&gt;Bien, ahora seguiriamos por los brazos, unas cosas mas raras &amp;hellip; La composicion de huesos es logica, pero cambia segun el modelo, por suerte , el modelo que me a dejado el profesor es bastante simple, por lo que no habra mucho problema. :D&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/clases/Brazos1.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -17-01-2017-</title>
      <link>http://lpinchol.github.io/post/Pintura-Del-Dia-17-01-2017/</link>
      <pubDate>Tue, 17 Jan 2017 23:32:03 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/Pintura-Del-Dia-17-01-2017/</guid>
      <description>

&lt;h1 id=&#34;center-imagen-del-dia-17-01-2017-center-br&#34;&gt;&lt;center&gt;Imagen del dia [17.01.2017]&lt;/center&gt;&lt;/br&gt;&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/pinturadia/34.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;center&gt;Caballera de Final Fantasy Tactics.&lt;/center&gt;&lt;/br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Comandos Git Fundamentales</title>
      <link>http://lpinchol.github.io/post/comandos-git-fundamentales/</link>
      <pubDate>Thu, 12 Jan 2017 00:09:45 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/comandos-git-fundamentales/</guid>
      <description>

&lt;h1 id=&#34;los-comandos-fundamentales-que-se-usan-en-git&#34;&gt;Los comandos fundamentales que se usan en git.&lt;/h1&gt;

&lt;p&gt;Los comandos fundamentales que se usan en git son muchos, pero dependiendo del tipo de control de versiones que uno esta realizando en ese momento.&lt;/p&gt;

&lt;p&gt;Por ejemplo si estas haciendo un control de versiones de un proyecto en el que solo participas tu, usaras los indispensables ya que con dejar el proyecto abierto para que otros puedas entrar sin problemas de cambiar la config sobra.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;inicializar&#34;&gt;Inicializar:&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git init {Crea un nuevo repositorio}
git clone /path/to/repository {Crea una copia local del repositorio}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;registro&#34;&gt;Registro&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git add &amp;lt;filename&amp;gt; {Agrega solo el fichero dado al registro}
git add . {Agrega todos los cambios realizados al registro}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;empaquetado&#34;&gt;Empaquetado&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git commit -m &amp;quot;Mensaje&amp;quot; {Empaqueta el registro para ser mandado}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;envio&#34;&gt;Envio&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git push origin master {Envia el paquete(Commit) por la rama &amp;quot;master&amp;quot; al repositorio}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;ramas&#34;&gt;Ramas&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git checkout -b dev {Crea una rama llamada &amp;quot;dev&amp;quot; y cambiate a ella}
git checkout master {Cambiar de rama}
git branch -d dev {Borra la rama &amp;quot;dev&amp;quot;}
git push origin &amp;lt;branch&amp;gt; {Envia al repositorio la nueva rama para actualizarla a todo el mundo}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;actualizacion&#34;&gt;Actualizacion&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git pull {Descarga los nuevos cambios del repositorio}
git merge &amp;lt;branch&amp;gt; {Fusiona la rama dada con tu rama actual}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;etiquetas&#34;&gt;Etiquetas&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git tag 1.0.0 {Creas una nueva etiqueta llamada 1.0.0}
git tag 1.0.0 1b2e1d63ff {Creas una nueva etiqueta haciendo referencia a 1b2e1d63ff, que es el id del commit}
git log {Sacas el id del commit}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y eso es todo de momento. Estos son los comandos que mas usaras. Pero si quieres pasar de usar consola y te ves mas comodo con una interfaz grafica, puedes usar diferentes clientes tales como:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://desktop.github.com/&#34; class=&#34;button&#34;&gt;GitHub Desktop(Win &amp;amp; Mac)&lt;/a&gt;&lt;a href=&#34;https://www.sourcetreeapp.com/&#34; class=&#34;button&#34;&gt;SourceTree(Win &amp;amp; Mac)&lt;/a&gt;&lt;a href=&#34;https://www.gitkraken.com/&#34; class=&#34;button&#34;&gt;GitKraken(Win/Mac/Linux)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chuleta Git Consola</title>
      <link>http://lpinchol.github.io/post/ChuletaGit/</link>
      <pubDate>Thu, 05 Jan 2017 01:02:50 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/ChuletaGit/</guid>
      <description>

&lt;h1 id=&#34;chuleta-de-git-consola&#34;&gt;Chuleta de Git (Consola)&lt;/h1&gt;

&lt;p&gt;==============&lt;/p&gt;

&lt;h1 id=&#34;probando-la-consola-y-comandos-para-git&#34;&gt;&amp;gt; Probando la consola y comandos para git&lt;/h1&gt;

&lt;p&gt;##Una vez instalado GIT, se hay que configurar:&lt;/p&gt;

&lt;p&gt;git config &amp;ndash;global user.name &amp;ldquo;&amp;rdquo;
git config &amp;ndash;global user.email &amp;ldquo;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;##Generando la public key:&lt;/p&gt;

&lt;p&gt;ssh-keygen&lt;/p&gt;

&lt;p&gt;##Leyendo tu llave para copiarla a GitHub&lt;/p&gt;

&lt;p&gt;cat ~/.shh/id_rsa.pub&lt;/p&gt;

&lt;p&gt;##Arrancando tu proyecto:&lt;/p&gt;

&lt;p&gt;git init                        //Iniciar git&lt;/p&gt;

&lt;p&gt;git clone git:ruta github       //Clona un repositorio&lt;/p&gt;

&lt;p&gt;touch README                    //Creas readme&lt;/p&gt;

&lt;p&gt;echo &amp;ldquo;Texto&amp;rdquo; &amp;gt; Readme.md        //Crea un archivo con texto en su interior y se llamara readme.md&lt;/p&gt;

&lt;p&gt;git add README                  //Añades readme&lt;/p&gt;

&lt;p&gt;git status                      //Muestra el estado de git&lt;/p&gt;

&lt;p&gt;git add .                       //Añade todos los archivos&lt;/p&gt;

&lt;p&gt;git commit -m &amp;ldquo;tu primer comm&amp;rdquo;  //Añadir commit&lt;/p&gt;

&lt;p&gt;git remote add origin           //Añadimos el remoto&lt;/p&gt;

&lt;p&gt;git push origin master          //Mandas los commits&lt;/p&gt;

&lt;p&gt;git pull origin master          //Recibir la actualizacion&lt;/p&gt;

&lt;p&gt;git branch                      //Te muestra todas las ramas&lt;/p&gt;

&lt;p&gt;git pull origin master          //Recibir la actualizacion&lt;/p&gt;

&lt;p&gt;git branch dev                  //Creacion de un branch&lt;/p&gt;

&lt;p&gt;git branch -d dev               //Eliminacion de la rama dev&lt;/p&gt;

&lt;p&gt;git checkout dev                //Cambiar a la rama Dev&lt;/p&gt;

&lt;p&gt;gitk                            //Saca la interfaz grafica&lt;/p&gt;

&lt;p&gt;##Todos los comandos:&lt;/p&gt;

&lt;p&gt;Chuleta de comandos git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* git help &amp;lt;command&amp;gt;
* git clone &amp;lt;uri&amp;gt; namedir # clona usando como nombre de directorio namedir.
* git add &amp;lt;dir&amp;gt; # añade recursivamente todos los archivos del dir.
* git diff --staged # compares staged changes with last commit
* git commit -v # muestra el diff en el editor
* git commit -a -m ” # automatically stage tracked files. No hace falta git add
* git rm --cached &amp;lt;file or regexp&amp;gt; # Git no realiza un seguimiento del archivo, pero los deja en el directorio de trabajo. Útil cuando se olvida añadir archivos al .gitignore y ya hemos agregado dichos archivos al repositorio.
* git rm &amp;lt;file&amp;gt; # borrarlos con git siempre.
* git rm -f &amp;lt;file&amp;gt; # si ya está modificado y en el index.
* git mv &amp;lt;file&amp;gt; &amp;lt;renamed_file&amp;gt;
* gitk # tcl/tk. Herramienta gráfica para git
* git commit --amend # Modificar el mensaje del último commit
* git reset HEAD &amp;lt;file&amp;gt; # to unstage
* git checkout -- &amp;lt;file&amp;gt; # Descartar cambios en el directorio de trabajo.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AÑADIR ARCHIVOS
    * git add -i # interactive staggin
    * git add -p # crea patch&lt;/p&gt;

&lt;p&gt;STASH
    * git stash # guarda el estado en una pila y limpia el directorio para poder cambiar de rama
    * git stash list # muestra la pila
    * git stash apply # vuelve al estado original del dir. Stash{n} especifica uno concreto Y &amp;ndash;index reaplica los cambios stagged
    * git stash pop # elimina el primero en la pila. O drop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* git log -p -2 # Muestra 2 últimos commits con diff
* git log --stat
* git log --pretty &amp;lt;short|full|fuller&amp;gt;
* git log --pretty=format:”%h - %an, %ar : %s”
* git log --pretty=format;”%h %s” --graph
* git log --since=2.weeks
* git log &amp;lt;branch&amp;gt; --not master # Muestra commit de &amp;lt;branch&amp;gt; sin incluir los de master
* git log --abbrev-commit --pretty=oneline
* git diff master…contrib # Muestra solo el trabajo que la rama contrib actual ha introducido desde su antecesor común con master
* git log &amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt; # Commits de branch2 que no están en branch1
* git log origin/master..master # Muestra qué commits se van a enviar al servidor
* git log origin/master.. # Igual que el anterior. Se asume master o HEAD
* git log refA refB --not refC # commits en refA y refB que no están en refC
* git log master…experiment # commits de master o experiment, pero sin ser comunes. Con --left-right indica a qué rama pertenece cada uno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;REMOTES # repos en internet
    * git remote -v # lista los repos remotos
    * git remote add [shortname] [url] # crea nuevo remote, es posible descargar el contenido de ese repo con git fetch [shortname]. Master branch en [shortcode]/master
    * git fetch &lt;remote&gt; # descarga trabajo nuevo a máquina local, no sobreescribe nada tuyo. ( git pull sí hace merge automaticamente si se esta realizando un seguimiento de esa branch)
    * git push [remote-name] [branch-name] # sii nadie ha hecho push antes
    * git remote show [remote-name] # inspecciona remote.
    * git remote rename &lt;old-name&gt; &lt;new-name&gt; # también renombra branches: quedaría &lt;new-name&gt;/master
    * git remote rm &lt;remote-name&gt; # p.e si el contribuidor ya no contribuye más&lt;/p&gt;

&lt;p&gt;Añadir varios repositorios remotos
    * git remote add bitbucket git@bitbucket.org:algui91/grado_informatica_tsi_practicas.git # Añadir un nuevo repositorio remoto con el nombre deseado. Por ejemplo si ya tenemos uno en github y queremos añadir otro para bitbucket
    * git push -u bitbucket –all # Subir el proyecto a bitbucket. A partir de ahora se puede seleccionar a qué repo publicar con*git push nombre_repo_remoto&lt;/p&gt;

&lt;p&gt;TAGGINGmarcan puntos importantes en la histtoria del repo ( releases )
    * git tag # muestra las etiquetas actuales
    * git tag -l ‘v1.4.2.*’ # acepta regex
    * Dos tipos de tag:
    * Lightweight : puntero a commit ( branch que no cambia )
    * Annotated : se almacenan como objetos en la db, con checksum, nombre del creador, email, fecha, mensaje, posibilidad de firmarla con GPG. ( recomendada )&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* git tag -a &amp;lt;tagname&amp;gt; -m ‘mensaje’ # annotated tag
* git show &amp;lt;tag-name&amp;gt; # muestra información asociada.
* git tag -s &amp;lt;tag-name&amp;gt; -m ‘message’ # la firma con gpg
* git tag &amp;lt;tag-name&amp;gt; # lightweight tag
* git tag -v &amp;lt;tag-name&amp;gt; # verifica tags firmadas
* git tag -a &amp;lt;tag-name&amp;gt; [commit-chksum] # crea tag para commit con dicho chksum
* Por defecto no se transfieren los tags, para subirlos al servidor:
* git push origin [tag-name] # una sola
* git push origin --tags # Enviar todas

* Para usar GPG y firmar tags, hay que subir la clave pública al repositorio:
* gpg --list-keys # Coges la id pública
* gpg -a --export &amp;lt;id&amp;gt; | git hash-object -w --stdin # Copia el SHA-1 devuelto
* git tag -a maintainer-gpg-pub &amp;lt;SHA-1&amp;gt;
* git push --tags # Comparte la clave con todos los usuarios
* git show maintainer-gpg-pub | gpg --import # Cada usuario importa la clave así
* git show &amp;lt;tag&amp;gt; # Devuelve más información sobre la etiqueta
* git tag -d nombre_tag # eliminar la etiqueta
* git push origin :refs/tags/nombre_tag # Eliminar la etiqueta del repositorio remoto.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;branch&#34;&gt;BRANCH&lt;/h2&gt;

&lt;h1 id=&#34;las-ramas-simplememte-son-punteros-a-distintos-snapshots&#34;&gt;las ramas simplememte son punteros a distintos snapshots&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;* 
    * git branch &amp;lt;nombre-rama&amp;gt; # crea rama. Puntero al commit actual
    * git checkout &amp;lt;nombre-rama&amp;gt; # cambiar a la rama especificada.
    * git checkout -b &amp;lt;nombre-rama&amp;gt; # crea y cambia de rama
    * git merge &amp;lt;rama&amp;gt; # Mezcla la rama actual con &amp;lt;rama&amp;gt;
    * git branch -d &amp;lt;rama&amp;gt; # elimina la rama
    * git push origin --delete &amp;lt;branchName&amp;gt; # Elimina una rama del servidor
    * git mergetool # Herramienta gráfica para resolver conflictos
    * git branch # lista ramas
    * git branch -v # lista ramas mostrando último commit
    * git branch --merged # lista ramas que han sido mezcladas con la actual. Si no tienen un *, pueden borrarse, ya que significa que se han incorporado los cambios en la rama actual.
    * git branch --no-merged # lista ramas que no han sido incorporadas a la actual. ## REMOTE BRANCHES

    * git fetch origin # Descarga el contenido del servidor
    * git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt; # Las ramas no se suben por defecto, has de subirlas explícitamente
    * git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;:&amp;lt;nuevoNombre&amp;gt; # Igual que la de arriba, pero en el servidor se llama a la rama con nuevoNombre en lugar de branch
    * Cuando se hace un git fetch que trae consigo nuevas ramas remotas, no se disponen de ellas localmente, solo se dispone de un puntero a la rama remota que no es editable. Para poder trabajar sobre esa rama, es necesario crearla Por ejemplo:
    * git fetch origin # Tras ejecutarlo, notamos que se ha creado una rama nueva (rama_nueva)
    * git checkout -b rama_nueva origin/rama_nueva # Crea una rama local a partir de la remota
    * git merge origin/nueva_rama # Equivalente a la de arriba, pero sin establecer el tracking a la rama

    * git push [remotename] :[branch] # elimina una rama remota
    * **git push [remotename] [localbranch]:[remotebranch] ** # La rama en el servidor tiene distinto nombre a la local ## TRACKING BRANCHES

    * git checkout --track origin/rama # Equivalente a -b rama_nueva origin/rama_nueva
    * git chekout -b &amp;lt;nuevo_nombre&amp;gt; origin/&amp;lt;rama&amp;gt; # Establece un nombre distinto para la rama local ## REBASE

* Rebase y merge se diferencian en que merge mezcla dos puntos finales de dos snapshots y rebase aplica cada uno de los cambios a la rama en la que se hace el rebase. No lo uses en repos publicos con mas colaboradores, porque todos los demas tendrán que hacer re-merges

* 
    * git checkout &amp;lt;una rama&amp;gt;
    * git rebase master # aplica todos los cambios de &amp;lt;una rama&amp;gt; a master
    * git merge master # hay que hacer un merge de tipo fast forward
    * Tenemos 3 ramas, master, client y server, en server y client tenemos varios commit y queremos mezclar client en master pero dejar server intacta:
    * git rebase --onto master server client # adivina los patches del antecesor común de las ramas server y client y aplica los cambios a master.
    * git checkout master*
    * git merge client # fast-forward. Client y master en el mismo snapshot
    * Si se quiere aplicar también los cambios de server, basta con:
    * git rebase master server*
    * git checkout master*
    * git merge server*

    * git rebase [basebranch] [topicbranch] # sintaxis de rebase
    * git rebase -i # Rebase interactivo

* # SERVIDOR

* 
    * git instawew # Muestra una interfaz web con los commits ## GENERAR UN NÚMERO DE COMPILACIÓN (BUILD NUMBER)

    * git describe master # Solo funciona para tags creadas con -s ó -a ## PREPARAR UNA RELEASE

    * git archive master -- prefix=”project/’ | gzip &amp;gt; `git describe master`.tar.gz

    * 
        * git archive master -- prefix=”project/’ --format=zip | `git describe master`.zip
        * test/ export-ignore # Al crear el tarball no incluye el directorio test/

    * ## GENERAR UN CHANGELOG

    * 
        * git shortlog --no-merges master --not &amp;lt;tag&amp;gt; # Recopila todos los commits desde &amp;lt;tag&amp;gt; y los agrupa por autor

    * ## RECOMENDACIONES

    * 
        * Siempre hay que hacer pull antes de push en caso de que alguien haya subido cambios al servidor. Ejemplo:
        * User1 clona el repo y hace cambios, realiza un commit
        * User2 clona el repo, hace cambios, hace commit y sube los cambios con push
        * User1 intenta hacer push, pero será rechazado con: &amp;lt;u&amp;gt;! [rejected] master -&amp;gt; master (non-fast forward)&amp;lt;/u&amp;gt;. No puede subir los cambios hasta que no mezcle el trabajo que ha subido User2. Así que debe hacer lo siguiente:

        * git fetch origin
        * git merge origin/master
        * git push origin master

        * Mientras User1 hacía estas operaciones, User2 ha creado una rama &amp;lt;u&amp;gt;issue54&amp;lt;/u&amp;gt; y realizado 3 commits, sin haber descargado los cambios de User1. Para sincronizar el trabajo, User2 debe hacer:
        * git fetch origin
        * git log --no-merges origin/master ^issue54 # Observa qué cambios ha hecho User1
        * git checkout master
        * git merge issue54 &amp;amp;&amp;amp; git merge origin/master*
        * git push origin master*

        * git diff --check # Antes de hacer commit, ejecutar esto para ver si hemos añadido demasiados espacios que puedan causar problemas a los demás.
        * Commits pequeños que se centren en resolver un problema, no commits con grandes cambios.
        * git add --patch # En caso de hacer varios cambios en el mismo archivo
        * El mensaje del commit debe tener la estructura siguiente: Una linea de no más de 50 caracteres, seguida de otra línea en blanco seguida de una descripción completa del commit.

    * ## PASOS A SEGUIR PARA CONTRIBUIR A PROYECYOS AJENOS, MEDIANTE FORK

    * 
        * git clone &amp;lt;url&amp;gt;
        * git checkout -b featureA
        * git commit
        * git remote add myFork &amp;lt;url&amp;gt;
        * git push myFork featureA
        * git request-pull origin/master myFork # enviar la salida por mail al propietario del proyecto, o hacer click en pull request.
        * Buena practica tener siempre una rama master que apunte a origin/master, para estar siempre actualizado con los ultimos cambios en el proyecto original.
        * Separar cada trabajo realizado en topic branch, que trackeen a origin/master

        * git checkout -b featureB origin/master
        * (Hacer cambios)
        * git commit
        * git push myFork featureB
        * (Contactar con el propietario del proyecto)
        * git fetch origin

        * Otro ejemplo, el propietario del proyecto quiere aceptar un pull tuyo, pero quiere que hagas algunos cambios, aprovechas la oportunidad y mueves tu trabajo para basarlo en el contenido actual de la rama origin/master, aplastas los cambios enfeatureB, resuelves conflictos, y haces push:

        * git checkout -b featureBv2 origin/master
        * git merge --no-commit --squash featureB
        * (cambiar la implementacion)
        * git commit
        * git push myFork featureBv2

        * --squash coge todo el trabajo de la rama mezclada y la aplasta en un no-merge commit encima de la rama en la que estas. --no-commit no registra el commit automaticamente. Así puedes realizar todos los cambios necesarios y luego hacer el commit

    * En segundo plano, git crea un log de a donde han estado referenciando HEAD y el resto de ramas en los últimos meses.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;reflog&#34;&gt;REFLOG&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;    * 
        * git reflog*
        * **git show HEAD@{n} ** # Muestra información sobre el reflog número n
        * git log -g master # Muestra el log formateado como la salida de reflog
        * **git show master@{yesterday} ** # Muestra los commits de ayer.

    * ## UTILIDADES

    * 
        * git show &amp;lt;short-SHA-1&amp;gt; # Es posible ver un commit pasando la versión abreviada del SHA-1
        * git rev-parse &amp;lt;branch&amp;gt; # A qué SHA-1 apunta una rama
        * **git show HEAD^ ** # Muestra commit padre
        * git show HEAD^2 # Muestra segundo padre
        * git show HEAD~2 # El primer padre del primer padre
        * git filter-branch --tree-filter ‘rm -f &amp;lt;file&amp;gt;’ HEAD # elimina el archivo de todos los commits

    * ## DEPURACIÓN

    * 
        * File anotation
        * git blame -L 12,22 &amp;lt;archivo&amp;gt; # muestra cuando y por quién se modificaron de la linea 12 a la 22
        * git blame -C -L 141,153 &amp;lt;file&amp;gt; # cuando renombras un archivo o lo refactorizas en varios, muestra de donde vino originalmente.

        * Búsqueda Binaria: Cuando hay un bug que no puedes localizar, usas bisect para dererminar en qué commit empezó a producirse el bug.
        * git bisect start*
        * git bisect bad # marcas el commit actual como roto
        * **git bisect good [commit bueno] ** # último commit conocido que funcionaba
        * Ahora irá preguntando hasta que encuentres el commit culpable. Si esta bien indicas git bisect good. De lo contrario git bisect bad. Al terminar hay que resetear.
        * git bisect reset

    * ## SUBMODULOS

    * 
        * git submodule add &amp;lt;url&amp;gt; # crea un directorio que contiene el comtenido de otro proyecto.

        * Clonar un repo con submodulos
        * git clone url
        * git submodule init
        * git submodule update

    * ## CONFIGURATION

    * 
        * git config --global &amp;lt;opcion&amp;gt; &amp;lt;valor&amp;gt; # global para usuario, system todos y sin nada, especifico para el repo.
        * **git config {key} ** # muestra el valor de key
        * git config --global core.editor &amp;lt;editor&amp;gt; # cambia el editor por defecto
        * git config --global commit.template $HOME/.gitmessage.txt # plantilla para commits
        * **git config --global core.pager ‘moreless’** # paginador por defecto, puedes usar cualquiera
        * git config --global user.signingkey &amp;lt;gpg-key-id&amp;gt; # clave gpg para firmar tags
        * git config --global core.excludesfile &amp;lt;file&amp;gt; # como gitignore
        * git config --global help.autocorrect 1 # autocorrige cuando se escribe un comando incorrecto. Solo en git &amp;gt;= 1.6.1
        * git config --global color.ui true # colorea la salida de git. Valores: truefalsealways
        * git config --global core.autocrlf input # para que usuarios linux no tengan problemas con los retornos de carro de windows
        * git config --global core.autocrlf true # para usuarios de windows
        * git config --global core.whitespace trailing-space, space-before-tab, indent-with-non-tab, cr-at-eol # respectivamente: busca espacios al final de línea, busca espacios al inicio de tabulación, busca líneas con 8 o más espacios en lugar de tabulaciones, acepta retornos de carro
        * git apply --whitespace=warn &amp;lt;patch&amp;gt; # advierte de errores de espacios antes de aplicar el patch. Con --whitespace=fix intenta arreglarlos

    * Otro ejemplo interesante es la expansión de la palabra clave$Date$. Para ello hay que escribir un script en ruby que recibe un archivo, encuentra la fecha de su último commit e inserta dicha fecha en el archivo:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git config &amp;ndash;global filter.indent.smudge cat
git config &amp;ndash;global filter.indent.clean indent
&lt;em&gt;.c filter=indentLuego:
Procesar archivos antes de hacer commit y antes de hacer checkout: Es posible crear tus propios filtros para hacer sustitución. Estos filtros se llamansmudgeyclean. Los puedes configurar para distintos directorios y luego escribir un script que procesará cada archivo antes de que sea checkeado (smudge) y commiteado (clean). Para ello,escribe en el .gitattributes: (En caso que quieras procesar código C)
Es posible hacer lo mismo para imágenes jpeg, es necesario instalarexiftoolpara extraer los metadatos y luego hacer:
echo ‘&lt;/em&gt;.jpeg diff=exif’ » .gitattributes
git config diff.exif.textconv exiftool
Diffing binary files
En ocasiones es útil mostrar diffs de archivos binarios, como una archivo de word:
*.doc diff=word
#tras esto hay que definir el filtro word para que git convierta archivos word a texto:
git config diff.word.textconv strings
Identificando archivos binarios
Muchos archivos son para uso local y no aportan información al repositorio. Para decirle a git qué archivos son binarios hacer añadir al archivo atributes:
&lt;nombre archivo o regexp&gt; -crlf -diff # git no intentará corregir problemas de crlf ni mostrará los cambios con diff. En versiones &amp;gt;= 1.6 se pueden sustituir estos dos valores por la macro binary
Archivo en .gitattributes en el directorio de trabajo o en .git/info/attributes para no committearlo&lt;/p&gt;

&lt;h2 id=&#34;git-attributes&#34;&gt;GIT ATTRIBUTES&lt;/h2&gt;

&lt;p&gt;#! /usr/bin/env ruby
  STDIN
last_date  &lt;code&gt;git log --pretty=format:&amp;quot;%ad&amp;quot; -1&lt;/code&gt;
 &amp;lsquo;$Date$&amp;rsquo; &amp;lsquo;$Date: &amp;lsquo;  last_date&lt;br /&gt;
Puedes nombrar este script comoexpand_date. Crea un filtro en git, llamado dater y dile que use el script anterior:
git config filter.dater.smudge expand_date
git config filter.dater.clean ‘perl -pe “s/\$Date[^\$]*\$/\$Date\$/”‘
Para usar el filtro, simplemente escribe la palabra clave en los archivos que desees:
*echo ‘# $Date$’ &amp;gt; date_test.txt
echo ‘date.txt filter=dater’ » .gitattributes
git add date_test.txt .gitattributes
git commit -m “Testing date expansion in Git”
rm date_test.txt
git checkout date_test.txt
cat date_test.txt
$Date: Tue Apr 21 07:26:52 2009 -0700$&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Feliz Navidad 2016</title>
      <link>http://lpinchol.github.io/post/feliznavidad2016/</link>
      <pubDate>Sat, 31 Dec 2016 03:30:57 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/feliznavidad2016/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/personal/navidad-2016.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feliz navidad y prospero año nuevo !!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&lt;a href=&#34;https://github.com/lPinchol&#34; class=&#34;button&#34;&gt;GitHub Repositorios&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nights of Azure 2 presenta a Arnice, a Christophorus y revela más detalles</title>
      <link>http://lpinchol.github.io/post/NightOfAzure2Presenta/</link>
      <pubDate>Mon, 28 Nov 2016 20:42:22 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/NightOfAzure2Presenta/</guid>
      <description>

&lt;h1 id=&#34;nights-of-azure-2-presenta-a-arnice-a-christophorus-y-revela-mas-detalles&#34;&gt;Nights of Azure 2 presenta a Arnice, a Christophorus y revela mas detalles&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Gust ha liberado nuevos detalles e imágenes de Nights of Azure 2: Bride of the New Moon presentándonos a Arnice y a Christophorus, personajes que regresan desde el primer Nights of Azure, así como otros aspectos del juego.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Arnice&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure02.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Con la voz de M.A.O, esta es una chica medio demonio que en su día gobernoó sobre los demonios como “Nightlorg” y luchó durante mucho tiempo por el bien de las personas. Aparece ante Alushe estando en posesión del tremendo poder de Nightlord.&lt;/p&gt;

&lt;p&gt;Arnice porta una gran espada y su ropa parece teñida con la sangre azul de los demonios. Tiene un gran poder, pero no ve ningún futuro.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure03.jpg&#34; alt=&#34;001&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure04.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Christophorus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure05.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Con la voz de Tomoyo Kurosawa, es un demonio de nivel avanzado y de “pura raza”. Tiene bastante interés en Alushe y aparece ante ella con cualquier oportunidad de forma inesperada, aunque parece estar buscando algo. Su objetivo es, no obstante, un completo misterio.&lt;/p&gt;

&lt;p&gt;A Christophorus le importa bien poco que Alushe se ponga en guardia cada vez que ella aparece y la trata de forma casual.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure06.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habilidades especiales de Lily&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cuando Alushe está en aprietos puede activar la habilidad especial de su compañera Lily.&lt;/p&gt;

&lt;p&gt;Liliana por ejemplo tiene una habilidad llamada “Petición a los cielos” que puede revivir a Alushe cuando cae en combate, aunque solo una vez, además de detener el tiempo a su alrededor.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure07.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Las Lilys y las acciones de campo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para zonas en las que sea complicado avanzar, Alushe podrá realizar acciones especiales como cargar con su Lily.&lt;/p&gt;

&lt;p&gt;Un ejemplo es cómo Alushe cargará a Liliana cuando toque atravesar una zona con agua.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure08.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lily Burst&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La habilidad “Lily Burst” es única para cada una de las Lily, y por ejemplo Camilla disparará junto a Alushe al enemigo. El rango del ataque no es muy amplio, pero sí es muy poderoso.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure09.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Liliana en cambio invocará un pilar de luz que acabará con los demonios cercanos, de forma que Alushe los confinará y Liliana lanzará su oración para eliminarlos.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure010.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;El desarrollo de Alushe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Al vencer a los enemigos Alushe irá reuniendo “Sangre”, la cual usará para subir de nivel. Los “puntos de habilidad” se consumirán a la hora de adquirir nuevas habilidades a elección del jugador. Las habilidades disponibles están divididas en árboles de habilidad, y para alcanzar algunas habrá que cumplir ciertos requisitos.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure011.jpg&#34; alt=&#34;001&#34; /&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure012.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nuevo subordinadio demonio: Kaede&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure013.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Kaede es una nueva subordinada demonio de tipo Tricker y que es una marioneta. Es muy fiel y va acompañada de varios familiares, los cuales atacan a distancia a sus órdenes. Es un apoyo muy poderoso y puede detener a los enemigos con su magia negra.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ilustración de la Premium Box&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure014.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/azure015.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nights of Azure 2: Bride of the New Moon&lt;/strong&gt; se lanzará en febrero de 2017 en las PlayStation 4 y PSVita japonesas. Su lanzamiento en occidente está anunciado pero de momento no se ha concretado fecha.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Los JRPGs siguen gustando mucho en Japon</title>
      <link>http://lpinchol.github.io/post/jrpgs-japoneses/</link>
      <pubDate>Mon, 28 Nov 2016 20:31:17 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/jrpgs-japoneses/</guid>
      <description>

&lt;h1 id=&#34;los-jrpgs-siguen-gustando-mucho-en-japón&#34;&gt;Los JRPGs siguen gustando mucho en Japón&lt;/h1&gt;

&lt;p&gt;Aunque los JRPGs están sufriendo de ciertos problemas relevantes en tierras niponas, es indiscutible que su ritmo de lanzamientos y su calidad no ha descendido en estos últimos años. Los RPGs siguen gustando en Japón y los títulos de este género nacidos en tierras niponas siguen teniendo un tirón evidente, por mucho que muchos quisieron darlo por perdido.&lt;/p&gt;

&lt;p&gt;Una prueba más de esto lo tenemos con el último especial de la revista Famitsu, la más importante para los videojuegos en la isla, y también con bastante influencia fuera de sus fronteras, ha preguntado a sus lectores cuáles consideran como los títulos más importantes de PlayStation 3, coincidiendo con el décimo aniversario del sistema.&lt;/p&gt;

&lt;p&gt;Aunque este tipo de listas suele ser subjetivas y muchas veces no reflejan la realidad, resulta llamativo la gran cantidad de RPGs que los nipones han incluído entre los más relevantes:
&amp;gt; *Demon&amp;rsquo;s Souls (288)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;*The Last of Us (241)&lt;/p&gt;

&lt;p&gt;*Dark Souls (216)&lt;/p&gt;

&lt;p&gt;*Final Fantasy XIII (201)&lt;/p&gt;

&lt;p&gt;*Metal Gear Solid 4: Guns of the Patriots (200)&lt;/p&gt;

&lt;p&gt;*NieR (197)&lt;/p&gt;

&lt;p&gt;*Valkyria Chronicles (186)&lt;/p&gt;

&lt;p&gt;*Tales of Vesperia (181)&lt;/p&gt;

&lt;p&gt;*Uncharted 2: Among Thieves (170)&lt;/p&gt;

&lt;p&gt;*Dragon’s Dogma: Dark Arisen (168)&lt;/p&gt;

&lt;p&gt;*MAG (160)&lt;/p&gt;

&lt;p&gt;*Grand Theft Auto V (155)&lt;/p&gt;

&lt;p&gt;*Resonance of Fate (146)&lt;/p&gt;

&lt;p&gt;*Mobile Suit Gundam: Extreme Vs. Full Boost (138)&lt;/p&gt;

&lt;p&gt;*The Elder Scrolls V: Skyrim (131)&lt;/p&gt;

&lt;p&gt;*Call of Duty: Black Ops II (120)&lt;/p&gt;

&lt;p&gt;*Uncharted 3: Drake’s Deception (114)&lt;/p&gt;

&lt;p&gt;*Journey (108)&lt;/p&gt;

&lt;p&gt;*Yakuza 5 (99)&lt;/p&gt;

&lt;p&gt;*Mainichi Issho (89)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sobran las palabras: 9 de los 20 juegos de la lista (Que llega a 30, con Persona 5 ocupando el puesto 23) forman parte de nuestro género favorito. Además, parece que también les gusta barrer para casa ya que ocho de ellos son JRPGs, siendo solo Skyrim el que se abre hueco entre ellos (otras importantes propuestas, como Fallout o Mass effect no parecen calar tan bien), si bien resulta evidente que los Souls distan mucho de tener una estética oriental y copan los primeros puestos, destacando el caso que el menos conocido de la serie, por ser el primero, es el que domina la lista.&lt;/p&gt;

&lt;p&gt;Sorprende (desde un punto de vista occidental) la posición de Final Fantasy XIII, demasiado arriba para lo que muchos pensarían. Sin embargo, a pesar de las críticas, el primer título de Lightning es también uno de los más respetados en tierras niponas. También podemos ver a Nier en sexta posición, un diamante en bruto para muchos, pero que no llegó a cuajar su propuesta ni mucho menos. Seguramente, la cercanía de su secuela ha ayudado a que gane fuerza la idea de que muchos dejaron pasar esa joya. Lo de que el único juego de la serie Tales of que se cuele entre los 20 más relevantes empezase siendo una exclusividad de Xbox 360 (De hecho, sigue siendo exclusivo en occidente) resulta también llamativo, aunque casa con la idea que comparten muchos jugadores que consideran a esa entrega como la mejor de la saga reciente.&lt;/p&gt;

&lt;p&gt;Que otro título no-tan-comercial como Resonance of Fate también aparezca por la lista y sea el único RPG sin secuela de los observados, es otra sorpresa más de este listado.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clase de sistemas de particulas - Unity3D</title>
      <link>http://lpinchol.github.io/post/particulas-clase/</link>
      <pubDate>Mon, 14 Nov 2016 09:23:14 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/particulas-clase/</guid>
      <description>

&lt;h1 id=&#34;clase-de-sistemas-de-particulas-unity3d&#34;&gt;Clase de sistemas de particulas - Unity3D&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/clases/part.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Los parametros mas usados son, Base, emision y renderer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Parametros Base&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Duracion: La vida que tendra todas las particulas.&lt;/p&gt;

&lt;p&gt;Looping: Crea un loop por el cual crea un loop de las particulas.&lt;/p&gt;

&lt;p&gt;Prewarm: Aparecen todas las particulas directamente (No se inician poco a poco).&lt;/p&gt;

&lt;p&gt;Start Delay: El tiempo que tardan en empezar.&lt;/p&gt;

&lt;p&gt;Start Lifetime: El tiempo desde que sale hasta que desaparece.&lt;/p&gt;

&lt;p&gt;Start Speed: La velocidad inicial de las particulas.&lt;/p&gt;

&lt;p&gt;3D Start Size: Modifica la malla para estirar las particulas.&lt;/p&gt;

&lt;p&gt;Start Size: Tamaño inicial de las particulas.&lt;/p&gt;

&lt;p&gt;3D Start Rotacion: Modifica la rotacion de las particulas.&lt;/p&gt;

&lt;p&gt;Randomize Rotacion: Rotacion aleatoria.&lt;/p&gt;

&lt;p&gt;Start Color: Color inicial.&lt;/p&gt;

&lt;p&gt;Gravity Modifier: Gravedad para las particulas.&lt;/p&gt;

&lt;p&gt;Simulation Space: Cambiar el pivote.&lt;/p&gt;

&lt;p&gt;Scaling Mode: Escalar en el espacio global o loca.&lt;/p&gt;

&lt;p&gt;Play On Awake: Reproducir cuando uses Awake.&lt;/p&gt;

&lt;p&gt;Max particle: Numero maximo de particulas del sistema.&lt;/p&gt;

&lt;p&gt;Auto Random Seed: Donde van a aparecer desde el punto de vision las particulas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Parametros Emission&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rate: Numero de particulas por segundo que se van a emitir.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Parametros Shape&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shape: La forma que va a coger la particula.&lt;/p&gt;

&lt;p&gt;Angle: Angulo de las particulas&lt;/p&gt;

&lt;p&gt;Radius: Aumenta o disminuye el radio.&lt;/p&gt;

&lt;p&gt;Emit from: Modifica la zona de emision.&lt;/p&gt;

&lt;p&gt;Random Direction: Direccion aleatoria.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Parametros Renderer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Render Mode: Billboard (Orientado a la camara), tipo de renderizado
Normal Direction: Direccion de la normal&lt;/p&gt;

&lt;p&gt;Material: Material a renderizar&lt;/p&gt;

&lt;p&gt;Sort Mode: Que particulas iran por delante de lo demas.&lt;/p&gt;

&lt;p&gt;Sorting Fugde: Lo mismo&lt;/p&gt;

&lt;p&gt;Cast Shadorws: Proyecten sombras&lt;/p&gt;

&lt;p&gt;Receiver Shadows: Recibir sombras&lt;/p&gt;

&lt;p&gt;Min Particle Size: Tamaño de las particulas minimo.&lt;/p&gt;

&lt;p&gt;Max Particle Size: Tamaño de las particulas maximo.&lt;/p&gt;

&lt;p&gt;Sorting Layer: La capa&lt;/p&gt;

&lt;p&gt;Order in Layer: Orden de la capa.&lt;/p&gt;

&lt;p&gt;Billboard alignment: Alineacion del billboard.&lt;/p&gt;

&lt;p&gt;Pivot: Pivote general&lt;/p&gt;

&lt;p&gt;Light Probes: Si se utilizan los probes&lt;/p&gt;

&lt;p&gt;Reflection Probes: Si se utiliza reflection&lt;/p&gt;

&lt;p&gt;Anchor override: La posicion&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trails of Cold Steel II se retrasa 4 días en España</title>
      <link>http://lpinchol.github.io/post/trails-of-cold-retrasado/</link>
      <pubDate>Wed, 09 Nov 2016 20:15:31 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/trails-of-cold-retrasado/</guid>
      <description>

&lt;h1 id=&#34;trails-of-cold-steel-ii-se-retrasa-4-días-en-españa&#34;&gt;Trails of Cold Steel II se retrasa 4 días en España&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/train.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Esto era algo que se estaba barruntando desde este mediodía, pero hasta ahora no hemos podido contar con la confirmación oficial: al igual que ocurriera con Trails of Cold Steel, su secuela, The Legend of Heroes: Trails of Cold Steel II (PS3/Vita) no llegará a España en formato físico el 11 de noviembre, como estaba originalmente marcado, sino que lo recibiremos el 15 de noviembre.&lt;/p&gt;

&lt;p&gt;Este retraso de unos días se debe a unas cuestiones evidentes de logística que, de nuevo, habría que apuntar a los problemas de distribuidoras como NIS en Europa, que ha delegado en Namco Bandai las labores de distribución de este título en nuestro país. ¿Y qué pasa si lo hace la última hora? Pues que Namco Bandai no puede distribuir todas las copias del título de Nihon Falcom en la fecha prevista.&lt;/p&gt;

&lt;p&gt;Así, pues, a los que vayamos a adquirir la copia física del juego (Puesto que, digitalmente, sí estará disponible el 11, aunque su venta no computará a España) nos tocará esperar cuatro días extra. Pero, bueno, de mientras podemos hypearnos leyendo los análisis de su lanzamiento en otras regiones. Son solo unos días más.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bakeo simple en Unity3d</title>
      <link>http://lpinchol.github.io/post/Lighting-bake/</link>
      <pubDate>Mon, 07 Nov 2016 09:28:50 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/Lighting-bake/</guid>
      <description>

&lt;h1 id=&#34;bakeo-simple-en-unity3d&#34;&gt;Bakeo simple en Unity3d&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh00.png&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Primero preparamos la escena, con colores planos (simples) y algun objeto para representar en la escena, como una
esfera.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Luego configuramos la iluminacion para el quemado. Lo mas importante seria el echo de quitar el bakeo y seleccionar en tiempo real para preparar la escena entera.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh02.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Añadimos una pequeña animacion para el movimiento de la luz direccional para ver en tiempo real el movimiento y si esta bien configurado.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
public float v = 5;
private void Update(){transform.Rotate(new Vector3(0,v,0),Space.World);}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de ver que todo funciona correctamente.
Implementar un Reflection Probe para ver el reflejo de las zonas donde se quieran reflejar.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh03.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Configurar el probe:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Tipo de reflejo&lt;/li&gt;
&lt;li&gt;Cuando refresca&lt;/li&gt;
&lt;li&gt;Resolucion&lt;/li&gt;
&lt;li&gt;HDR&lt;/li&gt;
&lt;li&gt;Etc..&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Luego importamos el paquete de unity de characters y instanciamos unos cuantos personajes con AI y un nav mesh para que se pueda mover.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh04.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Luego ponemos una esfera o un cubo de objetivo y al darle play el personaje seguira al objetivo.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh05.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Pero el jugador no se ilumina bien por lo que creamos grupos de probes para conseguir toda la reflexion posible.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/unity/ligh06.gif&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>El anime Ai Mai Mi confirma que tendrá tercera temporada</title>
      <link>http://lpinchol.github.io/post/aimaimitercera/</link>
      <pubDate>Mon, 07 Nov 2016 02:50:47 +0100</pubDate>
      
      <guid>http://lpinchol.github.io/post/aimaimitercera/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/anime/AiMaiMe.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;el-anime-ai-mai-mi-confirma-que-tendrá-tercera-temporada&#34;&gt;El anime Ai Mai Mi confirma que tendrá tercera temporada&lt;/h1&gt;

&lt;p&gt;Fuga Hatori, compositor musical de las dos temporadas de la adaptación televisiva animada del manga 4-koma Ai Mai Mi de Choboraunyopomi, ha revelado que en el evento “ani x wara” celebrado este fin de semana se ha anunciado la producción de una tercera temporada que se estrenará en enero.&lt;/p&gt;

&lt;p&gt;Itsuki Imazaki regresará para dirigir la nueva serie bajo el estudio de animación Seven al igual que ya hiciera con las dos primeras temporadas. Fuga Hatori también regresará desde las dos temporadas anteriores como compositor musical. Dream Creation se encarga de la producción, mientras que Dax Production hará lo propio con la producción de sonido.&lt;/p&gt;

&lt;p&gt;Aya Uchida, Maaya Uchida y Yuka Otsubo retomarán sus roles como Mai, Mi y Ai respectivamente. Las tres seiyuus interpretaron los openings de las dos anteriores temporadas.&lt;/p&gt;

&lt;p&gt;Anteriormente ya se había desvelado esta información vía una tira cómica del manga en la web oficial del manga, aunque se retiraba posteriormente sin confirmarse la información.&lt;/p&gt;

&lt;p&gt;El manga está protagonizado por las chicas de un club de manga que lo mismo luchan contra malvados invasores extraterrestres, que se enfrentan a rivales en torneos o lidian con todo tipo de situaciones absurdas. De todo, menos dibujar manga como deberían.&lt;/p&gt;

&lt;p&gt;La primera adaptación animada llegaba en 2013, siguiéndole su secuela en 2014.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¿Cómo va la cosa en el género? Edición de octubre del 2016</title>
      <link>http://lpinchol.github.io/post/genero-octubre-2016/</link>
      <pubDate>Sat, 22 Oct 2016 16:00:39 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/genero-octubre-2016/</guid>
      <description>

&lt;h1 id=&#34;cómo-va-la-cosa-en-el-género-edición-de-octubre-del-2016&#34;&gt;¿Cómo va la cosa en el género? Edición de octubre del 2016&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/generoOc01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Conocer los datos (aproximados) de ventas y las puntuaciones de la crítica supone una buena forma de pulsar la apreciación actual de los RPGs en nuestro mercado, ya que son criterios como estos los que definen si un título o una saga puede tener posibilidades de seguir adelante.&lt;/p&gt;

&lt;p&gt;Lamentablemente, los datos de ventas suelen ir con bastante lentitud, lo cual hace que no podamos conocer exáctamente qué tal lo están haciendo estos lanzamientos. Sólo Media Create, en Japón, mantiene un ritmo actualizado de estos datos que, fuera del país nipón, casi se consideran un tabú. De hecho, compañías como Blizzard han anunciado que no harán más comentarios sobre el número de jugadores activos en su MMORPG World of Warcraft y, de hecho, tampoco han actualizado las cifras de ventas de su última expansión, Legion, de la que sólo tenemos datos de sus resultados en lanzamiento. Diferentes puntos de vista, desde luego.&lt;/p&gt;

&lt;p&gt;Al menos, en lo que se refiere a España, la cosa sí va a un ritmo aceptable (aunque sin números concretos) y hemos podido comprobar que World of Warcraft: Legion debutó como tercer juego más vendido en el mes de septiembre, con Dragon Quest VII entrando al puesto número 8. Si pasamos por cada sistema concreto, vemos por ahí a Yokai Watch, Pokémon, God Eater 2: Rage Burst (El más vendido del mes en Vita, por delante de Minecraft) o The Witcher 3, lo cual sin ser ideal, sí que nos indica que este género no es tan impopular en el país, como podría parecer.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/generoOc02.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;strong&gt;LOS RPGS MÁS VENDIDOS EN LO QUE LLEVAMOS DE 2016&lt;/strong&gt;&lt;/center&gt;
&lt;center&gt;Datos hasta septiembre del 2016&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/generoOc03.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Poco movimiento, pues, entre los datos de ventas, como hemos comentado, ya que ninguno de los debuts del género es lo suficientemente fuerte como para lograr superar el millón de unidades vendidas en unos pocos días.&lt;/p&gt;

&lt;p&gt;Así, pues, resulta interesante comentar lo que NO vemos entre los 10 más vendidos del año, con debuts como el de Yokai Watch 2 (N3DS) en América, que superó las 30.000 unidades vendidas en su primera semana. Teniendo en cuenta que el título original tuvo un debut muy pobre y, tras la emisión de la serie de animación, ya va rondando las 200.000 unidades vendidas, parece que, aunque no en los niveles de Japón, la fiebre de Yokai Watch ha llegado también a occidente.&lt;/p&gt;

&lt;p&gt;Lamentablemente, de Dragon Quest VII o Shin Megami Tensei IV: Apocalypse, los otros dos grandes RPGs de Nintendo 3DS que fueron lanzados las pasadas semanas, todavía no están disponibles sus datos numéricos aproximados, por lo que tendremos que esperar al próximo mes para poder comentar qué tal lo han hecho. Aunque si tenemos en cuenta que, en España, Dragon Quest VII se colocó entre los 10 más vendido en 15 días, no parece que pinte mal la cosa.&lt;/p&gt;

&lt;p&gt;En Japón, por su parte, el interés ha estado en dos títulos que esperamos con muchas ganas: Persona 5 (PS3/PS4) ya supera las 450.000 unidades vendidas (Entre Persona 4 y Golden están por encima de las 700.000 en la actualidad, lo cual dice mucho de lo que ha crecido esta saga) y Monster Hunter Stories (N3DS) ha superado las 200.000. Excelentes números para estos juegos.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;strong&gt;LOS RPGS MEJOR VALORADOS POR LA CRÍTICA EN LO QUE LLEVAMOS DE 2016&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/generoOc04.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;En cuanto a las valoraciones de la crítica, fuera parte de las alabanzas a Legion, actualmente el segundo RPG mejor valorado del año, podemos comprobar que muchos lanzamientos actuales también han logrado un buen resultado de crítica. De hecho, ya no es necesario hacer una lista sólo considerando las entradas completamente nuevas, puesto que aunque todavía hay muchos ports/remakes, la cosa se ha estabilizado y no resulta tan descompensada hacia los relanzamientos como hace unos meses.&lt;/p&gt;

&lt;p&gt;Shin Megami Tensei IV: Apocalypse (N3DS) ha tenido una gran entrada, actualmente dos puntos por encima de Shin Megami Tensei IV, lo cual es realmente admirable para tratarse de una secuela. De hecho, otra secuela como Trails of Cold Steel II nos ha dejado la única puntuación por encima de los 90 puntos del año en el género, si bien ha sido solo en la versión de PlayStation 3, que aún no ha llegado ni a los 4 análisis. Precisamente, el tema de los ports es algo bastante llamativo, ya que muchas versiones (especialmente en Vita) se están quedando sin analizar, como podéis comprobar.&lt;/p&gt;

&lt;p&gt;Aún así, The Banner Saga 2, Darkest Dungeon o Hyper Light Drifter se han conseguido mantener entre los 15 RPGs mejor valorados del año, a pesar de que los analistas de consolas han bajado sus medias al dar el salto a las mismas. Bueno, menos en Darkest Dungeon, este juego es tan especial que puede sobrevivir hasta ese trance.&lt;/p&gt;

&lt;p&gt;También podemos comprobar que Dragon Quest Builders (PS4/Vita) ha sorprendido muy gratamente a muchos analistas, que lo han colocado por encima de una entrega &amp;ldquo;normal&amp;rdquo; de la serie, como el remake de Dragon Quest VII y su debut en Nintendo 3DS. Realmente llamativo.&lt;/p&gt;

&lt;p&gt;En fin, muchos datos interesantes que, esperamos, os hayan ayudado a interpretar un poco mejor cómo está la situación en el género RPG.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Alliance Alive para Nintendo 3DS muestra su primer tráiler y revela más detalles</title>
      <link>http://lpinchol.github.io/post/alliance-trailer/</link>
      <pubDate>Thu, 20 Oct 2016 20:35:48 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/alliance-trailer/</guid>
      <description>

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;the-alliance-alive-para-nintendo-3ds-muestra-su-primer-tráiler-y-revela-más-detalles&#34;&gt;The Alliance Alive para Nintendo 3DS muestra su primer tráiler y revela más detalles&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;FuRyu&lt;/strong&gt; ha liberado el primer tráiler y dado más detalles de The Alliance Alive, su nuevo RPG para Nintendo 3DS desarrollado por Cattle Call (Legend of Legacy) y que cuenta con historia de Yoshitaka Murayama, creador de Suikoden.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La historia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hace miles de años, el mundo habitado por los humanos fue invadido por los Asmodias. Los Asmodians invadieron el mundo para tomar el control de la “Energía del Caos”, algo que amenaza su propio mundo, se convirtieron en gobernantes y pusieron una “gran barrera” al planeta.&lt;/p&gt;

&lt;p&gt;La gran barrera causó grandes perturbaciones al campo magnético del planeta, haciendo que el clima se descontrolase y que el “cielo azul” desapareciese para siempre.&lt;/p&gt;

&lt;p&gt;Como efecto de esta distorsión, nació el océano conocido como “Caos Oscuro”, el cual se tragó muchas ciudades.&lt;/p&gt;

&lt;p&gt;La mayoría de los humanos murió, y los pocos que sobrevivieron lo hicieron a duras penas debido a la durísima ruta marina y tuvieron que aceptar a los Asmodians como gobernantes.&lt;/p&gt;

&lt;p&gt;Cientos de años después, el mundo se ha dividido en varias zonas y una nueva jerarquía con los Asmodians en la cúspide se ha extendido por todo el mundo. Esto dio origen también a una nueva cultura.&lt;/p&gt;

&lt;p&gt;Sin embargo, por muchos años que hayan pasado, las llamas de la revolución todavía no se han apagado en los humanos.&lt;/p&gt;

&lt;p&gt;Ahora, el mundo comienza a ponerse en marcha de nuevo…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mundos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Con la aparición del océano conocido como “Caos Oscuro” en los mares, el mundo queda dividido y las rutas marinas cortadas, impidiendo toda comunicación con el exterior. Cada zona aislada se convierte en un mundo propio en el que los humanos son gobernado por los Asmodians.&lt;/p&gt;

&lt;p&gt;Aquí podremos encontrar mundos de lluvia, de fuego o incluso un mundo prisión.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli02.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli03.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli4.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Los protagonistas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El juego cuneta con nueve protagonistas, cambiando de perspectiva de uno a otro y viviendo la historia del enfrentamiento de las dos razas. El destino de los protagonistas irá convergiendo poco a poco hasta reunirlos a todos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Galil&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli5.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Un humano de 15 años que pertenece a la resistencia conocida como “Cuervos de la noche”. Es amable pero muy apasionado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ursula&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli6.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Una humana de 15 años que pertenece a la resistencia conocida como “Cuervos de la noche”. Es una joven siempre animada que se dedica a manipular a Galil y cuyas verdaderas intenciones no suelen ser evidentes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Barbarosa&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli7.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Un soldado fantasma de 36 años que pertenece a la resistencia conocida como “Cuervos de la noche”. Juró lealtad al padre de Ursula, quien en una ocasión salvó su vida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viviana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli8.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Una Asmodian de 20 años hija de un ser mágico noble. Una historiadora de personalidad tranquila con gran interés por el mundo humano.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ignace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli9.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Un Asmodian de 25 años y mayordomo que trabaja para Vivian. Valora en gran medida la clase y la disciplina.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rachel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli10.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Mercernaria humana de 28 años contratada por el Gremio Mágico. Es una mujer amable y de las que hacen lo primero que se les pasa por la cabeza sin pensar demasiado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Renzo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli11.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Un joven humano de 19 años que pertenece a la resistencia conocida como “Cuervos de la noche”. Siempre bien informado y optimista, sus ojos reflejan una gran calma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gene&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli12.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Humano de 27 años y usuario de magia del Gremio Mágico que es subordinado de los seres mágicos. Tiene una mente abierta y no se deja llevar por el momento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tiggy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli13.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Una humana de 12 años que investiga el Caos Oscuro. Es una profesora autoproclamada que ha creado varios inventos. Lucha contra los monstruos montada en su armadura “Swan Song”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;El combate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El sistema de combate por turnos permitirá participar hasta a cinco personajes en cada batalla. El sistema enfatiza el tempo y cuenta con una función de avance rápido para que el tiempo pase hasta cuatro veces más rápido de lo normal. Los encuentros con los enemigos se darán cuando se toque un monstruo en el mapa.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alli14.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;El tráiler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5aBqWo_KyHU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Atelier Firis se muestra en nuevos vídeos de juego: exploración, combates y Atelier</title>
      <link>http://lpinchol.github.io/post/atelier/</link>
      <pubDate>Thu, 20 Oct 2016 20:22:38 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/atelier/</guid>
      <description>

&lt;h1 id=&#34;atelier-firis-se-muestra-en-nuevos-vídeos-de-juego-exploración-combates-y-atelier&#34;&gt;Atelier Firis se muestra en nuevos vídeos de juego: exploración, combates y Atelier&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/atelier01.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gust&lt;/strong&gt; ha lanzado tres nuevos vídeos de juego de &lt;strong&gt;Atelier Firis: The Alchemist of the Mysterious Journey&lt;/strong&gt; presentando la exploración de mapas, los combates y las funciones del Atelier.&lt;/p&gt;

&lt;p&gt;Atelier Firis se lanzará el 2 de noviembre en las PlayStation 4 y PSVita japonesas, teniendo confirmada su futura llegada a occidente.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/gif/004.gif&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4AygyVw-vUw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/dcLZFf7G-pU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/nNWfV05tjIA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Alliance Alive para 3DS detalla su mundo, sus personajes y más</title>
      <link>http://lpinchol.github.io/post/alliancealive/</link>
      <pubDate>Tue, 18 Oct 2016 16:52:48 +0200</pubDate>
      
      <guid>http://lpinchol.github.io/post/alliancealive/</guid>
      <description>

&lt;h1 id=&#34;the-alliance-alive-para-3ds-detalla-su-mundo-sus-personajes-y-más&#34;&gt;The Alliance Alive para 3DS detalla su mundo, sus personajes y más&lt;/h1&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alliance.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;El número de esta semana de la revista Famitsu ha dado más detalles de The Alliance Alive, el nuevo RPG de FuRyu para Nintendo 3DS.&lt;/p&gt;

&lt;p&gt;El juego será un “nuevo RPG clásico”, pues tomará los elementos clásicos del género y los reconstruirá con las técnicas modernas. La historia nos presentará los esfuerzos de los humanos a la hora de oponerse a los seres mágicos que han gobernado el mundo con mano dura durante miles de años. El mundo se dividirá en varias zonas, cada una con su propia cultura, y los jugadores controlarán a los personajes a placer por los mapas. Las batallas darán comienzo al toparse con un símbolo enemigo. En total serán nueve los personajes principales, todos protagonistas, y que comenzarán su viaje con objetivos diferentes hasta ir convergiendo.&lt;/p&gt;

&lt;p&gt;Los personajes principales son:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Galil – Un muchacho que pertenece a la resistencia conocida como “Cuervos de la noche”. Es amable pero muy apasionado.&lt;/li&gt;
&lt;li&gt;Ursula – Una chica rubia que pertenece a la resistencia conocida como “Cuervos de la noche”. Es una joven siempre animada que se dedica a manipular a Galil y cuyas verdaderas intenciones no suelen ser evidentes.&lt;/li&gt;
&lt;li&gt;Barbarosa – Un soldado fantasma que pertenece a la resistencia conocida como “Cuervos de la noche”. Juró lealtad al padre de Ursula, quien en una ocasión salvó su vida.&lt;/li&gt;
&lt;li&gt;Vivian – Hija de un ser mágico noble. Una historiadora de personalidad tranquila con gran interés por el mundo humano.&lt;/li&gt;
&lt;li&gt;Ignace – Un ser mágico y mayordomo que trabaja para Vivian. Valora en gran medida la clase y la disciplina.&lt;/li&gt;
&lt;li&gt;Rachel – Mercernaria contratada por el Gremio Mágico. Es una mujer amable y de las que hacen lo primero que se les pasa por la cabeza sin pensar demasiado.&lt;/li&gt;
&lt;li&gt;Renzo – Un joven que pertenece a la resistencia conocida como “Cuervos de la noche”. Siempre bien informado y optimista, sus ojos reflejan una gran calma.&lt;/li&gt;
&lt;li&gt;Jean – Usuario de magia del Gremio Mágico que es subordinado de los seres mágicos. Tiene una mente abierta y no se deja llevar por el momento.&lt;/li&gt;
&lt;li&gt;Tigi – Una chica que investiga el flujo negro. Es una profesora autoproclamada que ha creado varios inventos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Famitsu también incluye una entrevista con el equipo, de la cual podemos extraer unos cuantos detalles más:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Tras investigar qué buscaba la gente y qué no ofrecían el resto de compañías, se dieron cuenta de que la respuesta era un RPG bien equilibrado entre historia y mecánicas de juego.&lt;/li&gt;
&lt;li&gt;Querían crear un mundo de gran variedad que hiciera que recorrerlo sin más, ya fuera entretenido.&lt;/li&gt;
&lt;li&gt;Decidieron ir en contra de las modas y usar un mapa del mundo a la antigua usanza, caminando por él y pudiendo hacerte una imagen global del mundo con ello.&lt;/li&gt;
&lt;li&gt;Están optimizando la distancia entre pueblos y mazmorras, así como el porcentaje de encuentros, para que sea una sensación satisfactoria y no agobiante.&lt;/li&gt;
&lt;li&gt;Los vehículos que permitirán alcanzar nuevos lugares, también estarán presentes.&lt;/li&gt;
&lt;li&gt;Una de las razones para que haya nueve protagonistas es que cada cual encuentre uno que le guste.&lt;/li&gt;
&lt;li&gt;Se podrá personalizar a placer el equipo con armas como espadas, lanzas y más.&lt;/li&gt;
&lt;li&gt;Las batallas contará con un elemento llamado “Despertar” que proporcionará una nueva técnica en el momento o subirá las estadísticas.&lt;/li&gt;
&lt;li&gt;Cuanto mayores y más fuertes sean los enemigos contra los que se combata, más rápido crecerán los personajes. Habrá ciertos elementos que permitirán impulsar este crecimiento.&lt;/li&gt;
&lt;li&gt;El grupo se compondrá de hasta cinco personajes. Habrá también formaciones y un sistema de “Gremio” que potenciará al grupo.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;El equipo principal del juego es:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Productor y director – Masataka Matsuura&lt;/li&gt;
&lt;li&gt;Argumento – Yoshitaka Murayama&lt;/li&gt;
&lt;li&gt;Diseño de juego  – Kyoji Koizumi&lt;/li&gt;
&lt;li&gt;Director artístico – Masayo Asano&lt;/li&gt;
&lt;li&gt;Compositor – Masashi Hamauzu&lt;/li&gt;
&lt;li&gt;Diseño de personajes – Ryou Hirao&lt;/li&gt;
&lt;li&gt;Desarrollo – Cattle Call (responsables de The Legend of Legacy)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Alliance Alive se lanzará en primavera de 2017 en las Nintendo 3DS japonesas.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;http://lpinchol.github.io/img/juegos/alliance2.jpg&#34; alt=&#34;001&#34; /&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>